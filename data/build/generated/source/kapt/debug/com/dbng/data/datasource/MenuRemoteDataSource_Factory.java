// Generated by Dagger (https://dagger.dev).
package com.dbng.data.datasource;

import com.dbng.data.network.MenuApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MenuRemoteDataSource_Factory implements Factory<MenuRemoteDataSource> {
  private final Provider<MenuApiService> menuApiServiceProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public MenuRemoteDataSource_Factory(Provider<MenuApiService> menuApiServiceProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.menuApiServiceProvider = menuApiServiceProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public MenuRemoteDataSource get() {
    return newInstance(menuApiServiceProvider.get(), ioDispatcherProvider.get());
  }

  public static MenuRemoteDataSource_Factory create(Provider<MenuApiService> menuApiServiceProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new MenuRemoteDataSource_Factory(menuApiServiceProvider, ioDispatcherProvider);
  }

  public static MenuRemoteDataSource newInstance(MenuApiService menuApiService,
      CoroutineDispatcher ioDispatcher) {
    return new MenuRemoteDataSource(menuApiService, ioDispatcher);
  }
}
