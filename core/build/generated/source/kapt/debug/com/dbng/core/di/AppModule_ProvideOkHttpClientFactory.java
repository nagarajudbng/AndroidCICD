// Generated by Dagger (https://dagger.dev).
package com.dbng.core.di;

import android.content.SharedPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public AppModule_ProvideOkHttpClientFactory(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(sharedPreferencesProvider.get());
  }

  public static AppModule_ProvideOkHttpClientFactory create(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new AppModule_ProvideOkHttpClientFactory(sharedPreferencesProvider);
  }

  public static OkHttpClient provideOkHttpClient(SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideOkHttpClient(sharedPreferences));
  }
}
